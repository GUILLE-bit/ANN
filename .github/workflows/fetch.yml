name: fetch-meteo
on:
  schedule:
    - cron: "0 */6 * * *"   # corre cada 6h (UTC)
  workflow_dispatch:
permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Safe git dir
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Python
        uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        run: pip install pandas requests

      # --- Diagnóstico del endpoint (muestra HTTP code/headers) ---
      - name: Probe endpoint (HEAD)
        run: |
          echo "== curl HEAD meteobahia =="
          curl -sS -I "https://meteobahia.com.ar/scripts/forecast/for-bd.xml" || true

      # --- Ejecuta el fetch (genera data/meteo_daily.csv) ---
      - name: Run fetch
        run: python fetch_meteobahia.py

      # --- Lista y muestra primeras líneas del CSV (debug) ---
      - name: Inspect output
        run: |
          echo "== ls data =="
          ls -lah data || true
          echo "== head CSV =="
          head -n 20 data/meteo_daily.csv || true

      # --- Sube artefactos (útil si luego falla la publicación) ---
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: meteo_outputs
          path: |
            data/meteo_daily.csv
          if-no-files-found: error

      # --- Publica a gh-pages (simple y robusto) ---
      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: data
          force_orphan: true
